#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (50000.000000000015, -1.1102230246251565e-11, 0)
                double radius = 500
            }
            dictionary Perspective = {
                double3 position = (1.8763294821469914, 1.8763294821470007, 1.8763294821470036)
                double3 target = (-8.881784197001252e-16, -2.6645352591003757e-15, 1.7763568394002505e-15)
            }
            dictionary Right = {
                double3 position = (0, -50000, -1.1102230246251565e-11)
                double radius = 500
            }
            dictionary Top = {
                double3 position = (0, 0, 50000)
                double radius = 500
            }
            string boundCamera = "/OmniverseKit_Persp"
        }
        dictionary omni_layer = {
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
        }
    }
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Z"
)

def Xform "World"
{
    def "Looks"
    {
        def Material "Aluminum_Anodized"
        {
            token outputs:mdl:displacement.connect = </World/Looks/Aluminum_Anodized/Shader.outputs:out>
            token outputs:mdl:surface.connect = </World/Looks/Aluminum_Anodized/Shader.outputs:out>
            token outputs:mdl:volume.connect = </World/Looks/Aluminum_Anodized/Shader.outputs:out>

            def Shader "Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @http://omniverse-content-production.s3-us-west-2.amazonaws.com/Materials/Base/Metals/Aluminum_Anodized.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "Aluminum_Anodized"
                token outputs:out
            }
        }
    }

    def Xform "pp"
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Cube "Cube" (
            prepend apiSchemas = ["PhysicsCollisionAPI", "PhysxCollisionAPI"]
        )
        {
            float3[] extent = [(-0.05, -0.05, -0.05), (0.05, 0.05, 0.05)]
            rel material:binding = </World/Looks/Aluminum_Anodized> (
                bindMaterialAs = "strongerThanDescendants"
            )
            bool physics:collisionEnabled = 1
            bool primvars:doNotCastShadows = 0
            double size = 0.1
            quatd xformOp:orient = (1, 0, 0, 0)
            double3 xformOp:scale = (1.4341580867767334, 2.3181071281433105, 0.668519139289856)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }
}

def "pp"
{
    def Xform "geoms_xform" (
        instanceable = true
        prepend references = @./mesh.usd@</pp/geoms_xform>
    )
    {
    }
}

over "Render" (
    hide_in_stage_window = true
)
{
}

